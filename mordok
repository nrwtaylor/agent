#!/usr/bin/env php
<?php
require __DIR__.'/vendor/autoload.php';

use Nrwtaylor\StackAgentThing; 

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
 /*
$application = new Application();

// ... register commands



$application->run();

exit();
   */ 


(new Application('Agent', '0.0.1'))
      ->register('agent')
 
      ->addArgument('message', InputArgument::IS_ARRAY, 'Datagram message')
 
      ->setCode(function (InputInterface $input, OutputInterface $output) {
              
        $message = $input->getArgument('message');

        $message = implode(" ", $message);

        $thing = new \Nrwtaylor\StackAgentThing\Thing(null);

        $thing->Create('console','mordok', $message);
        $agent = new \Nrwtaylor\StackAgentThing\Agent($thing);
        $agentclock = new \Nrwtaylor\StackAgentThing\Clocktime($thing);


        if (isset($agent->thing_report['sms'])) {
            $response = $agent->thing_report['sms'];
        } else {
            $response = "?";
        }
//        var_dump($clocktime);

        $response .= "\n" . number_format($thing->elapsed_runtime()) . "ms";
        //$response .= "\n" . $clockagent->clocktime . " " . $thing->nuuid;
$agentclock->makeClocktime();
//echo $agentclock->clocktime;
        $response .= "\n" . $agentclock->clocktime . " " . $thing->nuuid;
        return $output->writeln("<info>$response</info>");
 
      })
      ->getApplication()
      ->setDefaultCommand('agent', true) // Single command application
      ->run();

/*
(new Application('Agent', '0.0.1'))
      ->register('agent')

      ->addArgument('message', InputArgument::OPTIONAL, 'Name of the person')

      ->addOption('say', null, InputOption::VALUE_REQUIRED, 'Custom greeting')

      ->setCode(function (InputInterface $input, OutputInterface $output) {

        $message = $input->getArgument('message');
        $greeting = $input->getOption('say');

        $thing = new \Nrwtaylor\StackAgentThing\Thing(null);

        $thing->Create('console','agent', $message);
        $agent = new \Nrwtaylor\StackAgentThing\Agent($thing);

        if (!empty($name) && !empty($greeting)) {
            return $output->writeln("<info>$greeting $name!</info>");
        } else if (!empty($name)) {
            return $output->writeln("<info>Hello $name!</info>");
        } else if (!empty($greeting)) {
            return $output->writeln("<info>$greeting World!</info>");
        } else {
            return $output->writeln("<info>Hello World!</info>");
        }
      })
      ->getApplication()
      ->run();
*/
