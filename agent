#!/usr/bin/env php
<?php
//require __DIR__.'/vendor/autoload.php';
require '/var/www/stackr.test/vendor/autoload.php';


use Nrwtaylor\StackAgentThing; 

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

(new Application('Agent', '0.0.3'))
      ->register('agent')
 
      ->addArgument('message', InputArgument::IS_ARRAY, 'Datagram message')
 
      ->setCode(function (InputInterface $input, OutputInterface $output) {


        
        $message = $input->getArgument('message');

        $message = implode(" ", $message);

        $thing = new \Nrwtaylor\StackAgentThing\Thing(null);

        $uuid = $thing->getUuid();

        $id = "console_8aa1";
//        $id = "17787920847";
//        $id = "17787923915";
        $test_new_user = false;
        if ($test_new_user) {
            $id = "console_" . $uuid;
        }
        $thing->Create($id,'agent', $message);

        // Tag as console input

        $console = new \Nrwtaylor\StackAgentThing\Channel($thing, "console");




//        $agent = new \Nrwtaylor\StackAgentThing\Agent($thing);

//        Can get it directly like this. dev.
//        echo $agent->response;

        $gearman = false; // true Use gearman
        if ($gearman) {
            $arr = json_encode(array("to"=>$id, "from"=>"agent", "subject"=>$message));
            $client= new \GearmanClient();
            $client->addServer();
            $thing_string = $client->doNormal("call_agent", $arr);
            // To reduce load.
            // $client->doHighBackground("call_agent", $arr);
            if ($thing_string == "") {echo "Null string returned from GEARMAN\n";}

            $thing_report = json_decode($thing_string,TRUE);
            //if (isset($thing_report['sms'])) {echo $thing_report['sms'];}
            echo "GEARMAN > " . $thing_report["sms"] . "\n";
            $sms = $thing_report['sms'];
            //echo "\nGEARMAN return code " . $client->returnCode();
        } else {
echo "APACHE > ";

        $agent = new \Nrwtaylor\StackAgentThing\Agent($thing);

        if (isset($agent->thing_report['sms'])) {
            $sms = $agent->thing_report['sms'];
        } else {
            $sms = "?";
        }



        }

        $response = "";
        //$response = $agent->response;
        //$response .= "\n";

        //if (isset($agent->thing_report['message'])) {
        //    $response .= $agent->thing_report['message'];
        //} else {
        //    $response .= "?";
        //}

        
        //$response .= "\n";

        $agentclock = new \Nrwtaylor\StackAgentThing\Clocktime($thing, "clocktime");
        //if (isset($agent->thing_report['sms'])) {
        //    $response .= $agent->thing_report['sms'];
        //} else {
        //    $response .= "?";
       // }

        $response .= $sms;

        $response .= "\n" . number_format($thing->elapsed_runtime()) . "ms";
        $agentclock->makeClocktime();
        $response .= "\n" . $agentclock->clock_time . " " . $thing->nuuid;
        return $output->writeln("<info>$response</info>");
 
      })
      ->getApplication()
      ->setDefaultCommand('agent', true) // Single command application
      ->run();
