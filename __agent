#!/usr/bin/env php
<?php
//require __DIR__.'/vendor/autoload.php';

require '/var/www/html/stackr.ca/vendor/autoload.php';

use Nrwtaylor\StackAgentThing; 

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
 /*
$application = new Application();

// ... register commands



$application->run();

exit();
   */ 

(new Application('Agent', '0.0.1'))
      ->register('agent')
 
      ->addArgument('message', InputArgument::IS_ARRAY, 'Datagram message')
 
      ->setCode(function (InputInterface $input, OutputInterface $output) {


        
        $message = $input->getArgument('message');

        $message = implode(" ", $message);

        $thing = new \Nrwtaylor\StackAgentThing\Thing(null);

        $thing->Create('console','agent', $message);

        // Tag as console input

        $console = new \Nrwtaylor\StackAgentThing\Channel($thing, "console");
        $agent = new \Nrwtaylor\StackAgentThing\Agent($thing);


        echo $agent->response;
        $gearman = true;
        if ($gearman) {
            $arr = json_encode(array("to"=>"console", "from"=>"agent", "subject"=>$message));
            $client= new \GearmanClient();
            $client->addServer();
            $thing_string = $client->doNormal("call_agent", $arr);
//        $client->doHighBackground("call_agent", $arr);
            if ($thing_string == "") {echo "Null string returned from GEARMAN\n";}

            $thing_report = json_decode($thing_string,TRUE);
            //if (isset($thing_report['sms'])) {echo $thing_report['sms'];}
            echo "GEARMAN > " . $thing_report["sms"] . "\n";

            //echo "\nGEARMAN return code " . $client->returnCode();
        }

        $response = $agent->response;
        $response .= "\n";

        if (isset($agent->thing_report['message'])) {
            $response .= $agent->thing_report['message'];
        } else {
            $response .= "?";
        }


        $response .= "\n";

        $agentclock = new \Nrwtaylor\StackAgentThing\Clocktime($thing, "clocktime");
        if (isset($agent->thing_report['sms'])) {
            $response .= $agent->thing_report['sms'];
        } else {
            $response .= "?";
        }
        $response .= "\n" . number_format($thing->elapsed_runtime()) . "ms";
        $agentclock->makeClocktime();
        $response .= "\n" . $agentclock->clock_time . " " . $thing->nuuid;
        return $output->writeln("<info>$response</info>");
 
      })
      ->getApplication()
      ->setDefaultCommand('agent', true) // Single command application
      ->run();

/*
(new Application('Agent', '0.0.2'))
      ->register('agent')

      ->addArgument('message', InputArgument::OPTIONAL, 'Name of the person')

      ->addOption('say', null, InputOption::VALUE_REQUIRED, 'Custom greeting')

      ->setCode(function (InputInterface $input, OutputInterface $output) {

        $message = $input->getArgument('message');
        $greeting = $input->getOption('say');

        $thing = new \Nrwtaylor\StackAgentThing\Thing(null);

        $thing->Create('console','agent', $message);
        $agent = new \Nrwtaylor\StackAgentThing\Agent($thing);



        $arr = json_encode(array("to"=>"console", "from"=>"gearman", "subject"=>$message));
        $client= new \GearmanClient();
        $client->addServer();
        //$client->doNormal("call_agent", $arr);
        $client->doHighBackground("call_agent", $arr);


        if (!empty($name) && !empty($greeting)) {
            return $output->writeln("<info>$greeting $name!</info>");
        } else if (!empty($name)) {
            return $output->writeln("<info>Hello $name!</info>");
        } else if (!empty($greeting)) {
            return $output->writeln("<info>$greeting World!</info>");
        } else {
            return $output->writeln("<info>Hello World!</info>");
        }
      })
      ->getApplication()
      ->run();
*/
